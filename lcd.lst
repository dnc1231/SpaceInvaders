


ARM Macro Assembler    Page 1 


    1 00000000         ; LCD.s
    2 00000000         ; Student names: daniel canterino and pranav padmanabha
    3 00000000         ; Last modification date: change this to the last modifi
                       cation date or look very silly
    4 00000000         
    5 00000000         ; Runs on LM4F120/TM4C123
    6 00000000         ; Use SSI0 to send an 8-bit code to the ST7735 160x128 p
                       ixel LCD.
    7 00000000         
    8 00000000         ; As part of Lab 7, students need to implement these LCD
                       _WriteCommand and LCD_WriteData
    9 00000000         ; This driver assumes two low-level LCD functions
   10 00000000         
   11 00000000         ; Backlight (pin 10) connected to +3.3 V
   12 00000000         ; MISO (pin 9) unconnected
   13 00000000         ; SCK (pin 8) connected to PA2 (SSI0Clk)
   14 00000000         ; MOSI (pin 7) connected to PA5 (SSI0Tx)
   15 00000000         ; TFT_CS (pin 6) connected to PA3 (SSI0Fss)
   16 00000000         ; CARD_CS (pin 5) unconnected
   17 00000000         ; Data/Command (pin 4) connected to PA6 (GPIO)
   18 00000000         ; RESET (pin 3) connected to PA7 (GPIO)
   19 00000000         ; VCC (pin 2) connected to +3.3 V
   20 00000000         ; Gnd (pin 1) connected to ground
   21 00000000         
   22 00000000 400043FC 
                       DC      EQU              0x400043FC
   23 00000000 400043FC 
                       GPIO_PORTA_DATA_R
                               EQU              0x400043FC
   24 00000000 40008008 
                       SSI0_DR_R
                               EQU              0x40008008
   25 00000000 4000800C 
                       SSI0_SR_R
                               EQU              0x4000800C
   26 00000000 00000004 
                       SSI_SR_RNE
                               EQU              0x00000004  ; SSI Receive FIFO 
                                                            Not Empty
   27 00000000 00000010 
                       SSI_SR_BSY
                               EQU              0x00000010  ; SSI Busy Bit
   28 00000000 00000002 
                       SSI_SR_TNF
                               EQU              0x00000002  ; SSI Transmit FIFO
                                                             Not Full
   29 00000000         
   30 00000000                 EXPORT           writecommand
   31 00000000                 EXPORT           writedata
   32 00000000         
   33 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   34 00000000                 THUMB
   35 00000000                 ALIGN
   36 00000000         
   37 00000000         ; The Data/Command pin must be valid when the eighth bit
                        is
   38 00000000         ; sent.  The SSI module has hardware input and output FI
                       FOs



ARM Macro Assembler    Page 2 


   39 00000000         ; that are 8 locations deep.  Based on the observation t
                       hat
   40 00000000         ; the LCD interface tends to send a few commands and the
                       n a
   41 00000000         ; lot of data, the FIFOs are not used when writing
   42 00000000         ; commands, and they are used when writing data.  This
   43 00000000         ; ensures that the Data/Command pin status matches the b
                       yte
   44 00000000         ; that is actually being transmitted.
   45 00000000         ; The write command operation waits until all data has b
                       een
   46 00000000         ; sent, configures the Data/Command pin for commands, se
                       nds
   47 00000000         ; the command, and then waits for the transmission to
   48 00000000         ; finish.
   49 00000000         ; The write data operation waits until there is room in 
                       the
   50 00000000         ; transmit FIFO, configures the Data/Command pin for dat
                       a,
   51 00000000         ; and then adds the data to the transmit FIFO.
   52 00000000         ; NOTE: These functions will crash or stall indefinitely
                        if
   53 00000000         ; the SSI0 module is not initialized and enabled.
   54 00000000         
   55 00000000         ; This is a helper function that sends an 8-bit command 
                       to the LCD.
   56 00000000         ; Input: R0  8-bit command to transmit
   57 00000000         ; Output: none
   58 00000000         ; Assumes: SSI0 and port A have already been initialized
                        and enabled
   59 00000000         writecommand
   60 00000000         ;1) Read SSI0_SR_R and check bit 4, 
   61 00000000         ;2) If bit 4 is high, loop back to step 1 (wait for BUSY
                        bit to be low)
   62 00000000         ;3) Clear D/C=PA6 to zero
   63 00000000         ;4) Write the command to SSI0_DR_R
   64 00000000         ;5) Read SSI0_SR_R and check bit 4, 
   65 00000000         ;6) If bit 4 is high, loop back to step 5 (wait for BUSY
                        bit to be low)
   66 00000000 B500            PUSH             {LR}
   67 00000002         CHECK
   68 00000002 4915            LDR              R1, =SSI0_SR_R
   69 00000004 680A            LDR              R2, [R1]
   70 00000006 F022 02EF       BIC              R2, #0XEF
   71 0000000A 2A10            CMP              R2, #0X10
   72 0000000C D0F9            BEQ              CHECK
   73 0000000E 4913            LDR              R1, =DC
   74 00000010 680A            LDR              R2, [R1]
   75 00000012 F022 0240       BIC              R2, #0X40
   76 00000016 600A            STR              R2, [R1]
   77 00000018 4911            LDR              R1, =SSI0_DR_R
   78 0000001A 680A            LDR              R2, [R1]
   79 0000001C 4602            MOV              R2, R0
   80 0000001E 600A            STR              R2, [R1]
   81 00000020         BUSYWAIT
   82 00000020 490D            LDR              R1, =SSI0_SR_R
   83 00000022 680A            LDR              R2,[R1]
   84 00000024 F022 02EF       BIC              R2, #0XEF
   85 00000028 2A10            CMP              R2, #0X10



ARM Macro Assembler    Page 3 


   86 0000002A D0F9            BEQ              BUSYWAIT
   87 0000002C F85D EB04       POP              {LR}
   88 00000030 4770            BX               LR
   89 00000032         
   90 00000032         ; This is a helper function that sends an 8-bit data to 
                       the LCD.
   91 00000032         ; Input: R0  8-bit data to transmit
   92 00000032         ; Output: none
   93 00000032         ; Assumes: SSI0 and port A have already been initialized
                        and enabled
   94 00000032         writedata
   95 00000032         ;1) Read SSI0_SR_R and check bit 1, 
   96 00000032         ;2) If bit 1 is low loop back to step 1 (wait for TNF bi
                       t to be high)
   97 00000032         ;3) Set D/C=PA6 to one
   98 00000032         ;4) Write the 8-bit data to SSI0_DR_R
   99 00000032 B500            PUSH             {LR}
  100 00000034         CHECK2
  101 00000034 4908            LDR              R1, =SSI0_SR_R
  102 00000036 680A            LDR              R2, [R1]
  103 00000038 F022 02FD       BIC              R2, #0XFD
  104 0000003C 2A02            CMP              R2, #0X02
  105 0000003E D1F9            BNE              CHECK2
  106 00000040         ;WRITE DATA
  107 00000040 4906            LDR              R1, =DC
  108 00000042 680A            LDR              R2, [R1]
  109 00000044 F042 0240       ORR              R2, #0X40
  110 00000048 600A            STR              R2, [R1]
  111 0000004A 4905            LDR              R1, =SSI0_DR_R
  112 0000004C 680A            LDR              R2, [R1]
  113 0000004E 4602            MOV              R2, R0
  114 00000050 600A            STR              R2, [R1]
  115 00000052 F85D EB04       POP              {LR}
  116 00000056 4770            BX               LR          ;   return
  117 00000058         
  118 00000058         
  119 00000058         ;***************************************************
  120 00000058         ; This is a library for the Adafruit 1.8" SPI display.
  121 00000058         ; This library works with the Adafruit 1.8" TFT Breakout
                        w/SD card
  122 00000058         ; ----> http://www.adafruit.com/products/358
  123 00000058         ; as well as Adafruit raw 1.8" TFT display
  124 00000058         ; ----> http://www.adafruit.com/products/618
  125 00000058         ;
  126 00000058         ; Check out the links above for our tutorials and wiring
                        diagrams
  127 00000058         ; These displays use SPI to communicate, 4 or 5 pins are
                        required to
  128 00000058         ; interface (RST is optional)
  129 00000058         ; Adafruit invests time and resources providing this ope
                       n source code,
  130 00000058         ; please support Adafruit and open-source hardware by pu
                       rchasing
  131 00000058         ; products from Adafruit!
  132 00000058         ;
  133 00000058         ; Written by Limor Fried/Ladyada for Adafruit Industries
                       .
  134 00000058         ; MIT license, all text above must be included in any re
                       distribution



ARM Macro Assembler    Page 4 


  135 00000058         ;****************************************************
  136 00000058         
  137 00000058                 ALIGN                        ; make sure the end
                                                             of this section is
                                                             aligned
  138 00000058                 END                          ; end of file
              4000800C 
              400043FC 
              40008008 
Command Line: --debug --xref --cpu=Cortex-M4 --apcs=interwork --depend=.\lcd.d 
-o.\lcd.o -ID:\Keil\ARM\RV31\INC -ID:\Keil\ARM\CMSIS\Include -ID:\Keil\ARM\Inc\
Luminary --predefine="__EVAL SETA 1" --list=.\lcd.lst LCD.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 33 in file LCD.s
   Uses
      None
Comment: .text unused
BUSYWAIT 00000020

Symbol: BUSYWAIT
   Definitions
      At line 81 in file LCD.s
   Uses
      At line 86 in file LCD.s
Comment: BUSYWAIT used once
CHECK 00000002

Symbol: CHECK
   Definitions
      At line 67 in file LCD.s
   Uses
      At line 72 in file LCD.s
Comment: CHECK used once
CHECK2 00000034

Symbol: CHECK2
   Definitions
      At line 100 in file LCD.s
   Uses
      At line 105 in file LCD.s
Comment: CHECK2 used once
writecommand 00000000

Symbol: writecommand
   Definitions
      At line 59 in file LCD.s
   Uses
      At line 30 in file LCD.s
Comment: writecommand used once
writedata 00000032

Symbol: writedata
   Definitions
      At line 94 in file LCD.s
   Uses
      At line 31 in file LCD.s
Comment: writedata used once
6 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

DC 400043FC

Symbol: DC
   Definitions
      At line 22 in file LCD.s
   Uses
      At line 73 in file LCD.s
      At line 107 in file LCD.s

GPIO_PORTA_DATA_R 400043FC

Symbol: GPIO_PORTA_DATA_R
   Definitions
      At line 23 in file LCD.s
   Uses
      None
Comment: GPIO_PORTA_DATA_R unused
SSI0_DR_R 40008008

Symbol: SSI0_DR_R
   Definitions
      At line 24 in file LCD.s
   Uses
      At line 77 in file LCD.s
      At line 111 in file LCD.s

SSI0_SR_R 4000800C

Symbol: SSI0_SR_R
   Definitions
      At line 25 in file LCD.s
   Uses
      At line 68 in file LCD.s
      At line 82 in file LCD.s
      At line 101 in file LCD.s

SSI_SR_BSY 00000010

Symbol: SSI_SR_BSY
   Definitions
      At line 27 in file LCD.s
   Uses
      None
Comment: SSI_SR_BSY unused
SSI_SR_RNE 00000004

Symbol: SSI_SR_RNE
   Definitions
      At line 26 in file LCD.s
   Uses
      None
Comment: SSI_SR_RNE unused
SSI_SR_TNF 00000002

Symbol: SSI_SR_TNF
   Definitions
      At line 28 in file LCD.s
   Uses
      None



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

Comment: SSI_SR_TNF unused
7 symbols
346 symbols in table
